@page "/routedetails/{RouteId:int}"
@inject TopLoggerPlus.Logic.StorageService StorageService


@if (_route == null)
{
    <h3>Loading RouteDetails..</h3>
}
else
{
    <h3>RouteDetails: @_route.Grade <span class="fa fa-circle" style="color: @_route.Color.Value"></span></h3>
    <div class="mt-3">
        <div>Rope: @_route.Rope</div>
        <div>Grade: @_route.Grade</div>
        <div>Wall: @_route.Wall</div>
        <div>Ascends: @_route.Ascends.Count</div>
        <ul>            
            @foreach (var ascend in _route.Ascends.OrderBy(a => a.LoggedAt))
            {
                <li>
                    <span>@ascend.LoggedAt.ToShortDateString() (@((int)(DateTime.Now - ascend.LoggedAt).TotalDays)d) - @ascend.TopType.ToString()</span>
                </li>
            }
        </ul>
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="oi oi-arrow-left" aria-hidden="true"></span> Back
        </NavLink>
    </div>
}

@code {
    [Parameter]
    public int RouteId { get; set; }
    
    private TopLoggerPlus.Logic.Model.Route _route;

    protected override async Task OnInitializedAsync()
    {
        var routes = await StorageService.ReadRoutes();
        _route = routes.SingleOrDefault(r => r.Id == RouteId);
    }
}